Digital electronics is a field focused on systems that use discrete values, often represented by binary (0s and 1s), to perform computation and processing. It’s foundational for computers, communication systems, and other digital devices. Here’s an overview of the basic number systems in digital electronics: 

### 1. **Binary System (Base-2)**
   - **Digits:** 0, 1
   - **How It Works:** Each binary digit, or "bit," represents a power of 2. The rightmost bit is the least significant bit (LSB), and each bit to the left increases in power.
   - **Examples:**
      - \(101\) in binary represents \(1 \times 2^2 + 0 \times 2^1 + 1 \times 2^0 = 5\) in decimal.
      - \(1101\) in binary represents \(1 \times 2^3 + 1 \times 2^2 + 0 \times 2^1 + 1 \times 2^0 = 13\) in decimal.

### 2. **Octal System (Base-8)**
   - **Digits:** 0 to 7
   - **How It Works:** Each digit represents a power of 8. Octal is sometimes used as a compact way to represent binary, as 3 binary bits correspond to a single octal digit.
   - **Examples:**
      - \(17\) in octal represents \(1 \times 8^1 + 7 \times 8^0 = 15\) in decimal.
      - \(25\) in octal represents \(2 \times 8^1 + 5 \times 8^0 = 21\) in decimal.
   
### 3. **Decimal System (Base-10)**
   - **Digits:** 0 to 9
   - **How It Works:** The most common system, used universally in daily life. Each digit represents a power of 10.
   - **Examples:**
      - \(123\) in decimal represents \(1 \times 10^2 + 2 \times 10^1 + 3 \times 10^0 = 123\).
      - \(456\) in decimal represents \(4 \times 10^2 + 5 \times 10^1 + 6 \times 10^0 = 456\).

### 4. **Hexadecimal System (Base-16)**
   - **Digits:** 0 to 9, A to F (where A=10, B=11, ..., F=15)
   - **How It Works:** Each digit represents a power of 16. Hexadecimal is often used in computing as a compact way to represent binary, with each hex digit corresponding to 4 binary bits.
   - **Examples:**
      - \(A\) in hexadecimal represents \(10\) in decimal.
      - \(1A\) in hexadecimal represents \(1 \times 16^1 + 10 \times 16^0 = 26\) in decimal.
      - \(FF\) in hexadecimal represents \(15 \times 16^1 + 15 \times 16^0 = 255\) in decimal.

### Conversions Between Number Systems
   - **Binary to Decimal:** Add each bit multiplied by its respective power of 2.
   - **Decimal to Binary:** Divide by 2, noting remainders, and write the remainder bits in reverse.
   - **Binary to Octal/Hexadecimal:** Group binary bits in sets of 3 (for octal) or 4 (for hexadecimal) and convert.
   - **Hexadecimal to Decimal:** Multiply each digit by \(16^n\), where \(n\) is the position from the right (starting at 0).

Understanding these number systems is key for working with digital systems, data storage, and coding in digital electronics.